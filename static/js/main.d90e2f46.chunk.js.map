{"version":3,"sources":["components/Form/index.js","components/Card/index.js","App.js","index.js"],"names":["Form","props","this","className","htmlFor","id","name","type","value","cardName","onChange","onInputChange","cardDescription","cardAttr1","cardAttr2","cardAttr3","cardImage","cardRare","hasTrunfo","checked","cardTrunfo","disabled","isSaveButtonDisabled","onClick","onSaveButtonClick","React","Component","Card","src","alt","App","validateSaveButton","state","description","attr1","attr2","attr3","image","rarity","parsedAttr1","parseInt","parsedAttr2","parsedAttr3","setState","handleChange","target","handleSaveButtonClick","event","preventDefault","trunfo","savedCards","newCard","length","handleDeleteButtonClick","cardId","parentElement","find","filter","map","savedCard","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d90e2f46.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './index.css';\n\nclass Form extends React.Component {\n  render() {\n    const { props } = this;\n    return (\n      <form className=\"add-new-card-form display-column\">\n        <label\n          htmlFor=\"name\"\n          className=\"display-column\"\n        >\n          Nome\n          <input\n            className=\"form-input-spacing pink-background medium-font\"\n            id=\"name\"\n            name=\"name\"\n            type=\"text\"\n            data-testid=\"name-input\"\n            value={ props.cardName }\n            onChange={ props.onInputChange }\n          />\n        </label>\n        <label\n          htmlFor=\"description\"\n          className=\"display-column\"\n        >\n          Descrição\n          <textarea\n            className=\"form-input-spacing pink-background medium-font\"\n            id=\"description\"\n            name=\"description\"\n            data-testid=\"description-input\"\n            value={ props.cardDescription }\n            onChange={ props.onInputChange }\n          />\n        </label>\n        <label\n          htmlFor=\"attr1\"\n          className=\"display-column\"\n        >\n          1º atributo\n          <input\n            className=\"form-input-spacing pink-background medium-font\"\n            id=\"attr1\"\n            name=\"attr1\"\n            type=\"number\"\n            data-testid=\"attr1-input\"\n            value={ props.cardAttr1 }\n            onChange={ props.onInputChange }\n          />\n        </label>\n        <label\n          htmlFor=\"attr2\"\n          className=\"display-column\"\n        >\n          2º atributo\n          <input\n            className=\"form-input-spacing pink-background medium-font\"\n            id=\"attr2\"\n            name=\"attr2\"\n            type=\"number\"\n            data-testid=\"attr2-input\"\n            value={ props.cardAttr2 }\n            onChange={ props.onInputChange }\n          />\n        </label>\n        <label\n          htmlFor=\"attr3\"\n          className=\"display-column\"\n        >\n          3º atributo\n          <input\n            className=\"form-input-spacing pink-background medium-font\"\n            id=\"attr3\"\n            name=\"attr3\"\n            type=\"number\"\n            data-testid=\"attr3-input\"\n            value={ props.cardAttr3 }\n            onChange={ props.onInputChange }\n          />\n        </label>\n        <label\n          htmlFor=\"image\"\n          className=\"display-column\"\n        >\n          Imagem\n          <input\n            className=\"form-input-spacing pink-background medium-font\"\n            id=\"image\"\n            name=\"image\"\n            type=\"text\"\n            data-testid=\"image-input\"\n            value={ props.cardImage }\n            onChange={ props.onInputChange }\n          />\n        </label>\n        <label\n          htmlFor=\"rarity\"\n          className=\"display-column\"\n        >\n          Raridade\n          <select\n            className=\"form-input-spacing medium-font\"\n            id=\"rarity\"\n            name=\"rarity\"\n            data-testid=\"rare-input\"\n            value={ props.cardRare }\n            onChange={ props.onInputChange }\n          >\n            <option>normal</option>\n            <option>raro</option>\n            <option>muito raro</option>\n          </select>\n        </label>\n        {props.hasTrunfo ? <p>Você já tem um Super Trunfo em seu baralho</p> : (\n          <label\n            htmlFor=\"trunfo\"\n            className=\"trunfo-label\"\n          >\n            <input\n              id=\"trunfo\"\n              name=\"trunfo\"\n              type=\"checkbox\"\n              data-testid=\"trunfo-input\"\n              checked={ props.cardTrunfo }\n              onChange={ props.onInputChange }\n            />\n            Super Trunfo\n          </label>)}\n        <button\n          type=\"submit\"\n          data-testid=\"save-button\"\n          disabled={ props.isSaveButtonDisabled }\n          onClick={ props.onSaveButtonClick }\n        >\n          Salvar\n        </button>\n      </form>\n    );\n  }\n}\n\nForm.propTypes = {\n  cardName: PropTypes.string.isRequired,\n  cardDescription: PropTypes.string.isRequired,\n  cardAttr1: PropTypes.string.isRequired,\n  cardAttr2: PropTypes.string.isRequired,\n  cardAttr3: PropTypes.string.isRequired,\n  cardImage: PropTypes.string.isRequired,\n  cardRare: PropTypes.string.isRequired,\n  cardTrunfo: PropTypes.bool.isRequired,\n  isSaveButtonDisabled: PropTypes.bool.isRequired,\n  hasTrunfo: PropTypes.bool.isRequired,\n  onInputChange: PropTypes.func.isRequired,\n  onSaveButtonClick: PropTypes.func.isRequired,\n};\n\nexport default Form;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './index.css';\n\nconst DEFAULT_IMG = 'https://cdn.pixabay.com/photo/2016/12/18/13/44/download-1915749_960_720.png';\n\nclass Card extends React.Component {\n  render() {\n    const { props } = this;\n    return (\n      <div className=\"card display-column white-background\">\n        <h3 data-testid=\"name-card\">{ props.cardName }</h3>\n        <img\n          src={ !props.cardImage ? DEFAULT_IMG : props.cardImage }\n          alt={ props.cardName }\n          data-testid=\"image-card\"\n        />\n        {props.cardTrunfo && <h4 data-testid=\"trunfo-card\">Super Trunfo</h4>}\n        <p data-testid=\"description-card\">{ props.cardDescription }</p>\n        <p className=\"attribute-name\">\n          Attr01....................................\n          <span data-testid=\"attr1-card\">{ props.cardAttr1 }</span>\n        </p>\n        <p className=\"attribute-name\">\n          Attr02....................................\n          <span data-testid=\"attr2-card\">{ props.cardAttr2 }</span>\n        </p>\n        <p className=\"attribute-name\">\n          Attr03....................................\n          <span data-testid=\"attr3-card\">{ props.cardAttr3 }</span>\n        </p>\n        <p data-testid=\"rare-card\">{ props.cardRare }</p>\n      </div>\n    );\n  }\n}\n\nCard.propTypes = {\n  cardName: PropTypes.string.isRequired,\n  cardDescription: PropTypes.string.isRequired,\n  cardAttr1: PropTypes.string.isRequired,\n  cardAttr2: PropTypes.string.isRequired,\n  cardAttr3: PropTypes.string.isRequired,\n  cardImage: PropTypes.string.isRequired,\n  cardRare: PropTypes.string.isRequired,\n  cardTrunfo: PropTypes.bool.isRequired,\n};\n\nexport default Card;\n","import React from 'react';\nimport Form from './components/Form';\nimport Card from './components/Card';\nimport './index.css';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      name: '',\n      description: '',\n      attr1: '',\n      attr2: '',\n      attr3: '',\n      image: '',\n      rarity: 'normal',\n      trunfo: false,\n      hasTrunfo: false,\n      isSaveButtonDisabled: true,\n      savedCards: [],\n    };\n  }\n\n  validateSaveButton = () => {\n    const { name, description, attr1, attr2, attr3, image, rarity } = this.state;\n    const parsedAttr1 = parseInt(attr1, 10);\n    const parsedAttr2 = parseInt(attr2, 10);\n    const parsedAttr3 = parseInt(attr3, 10);\n    const maxSum = 210;\n    const maxValue = 90;\n\n    if ((parsedAttr1 + parsedAttr2 + parsedAttr3 <= maxSum)\n      && (parsedAttr1 >= 0 && parsedAttr1 <= maxValue)\n      && (parsedAttr2 >= 0 && parsedAttr2 <= maxValue)\n      && (parsedAttr3 >= 0 && parsedAttr3 <= maxValue)\n      && (name !== '')\n      && (description !== '')\n      && (image !== '')\n      && (rarity !== '')\n    ) {\n      this.setState({ isSaveButtonDisabled: false });\n    } else {\n      this.setState({ isSaveButtonDisabled: true });\n    }\n  }\n\n  handleChange = ({ target }) => {\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    /*\n    Utilizei a sugestão do Sugano, na thread abaixo, para que minha função de validação fosse executada com os dados do state atualizados.\n    link: https://trybecourse.slack.com/archives/C02B4PPBERE/p1636386780255600\n    */\n    this.setState({ [target.name]: value }, () => this.validateSaveButton());\n  }\n\n  handleSaveButtonClick = (event) => {\n    event.preventDefault();\n\n    const { name, description, attr1, attr2, attr3,\n      image, rarity, trunfo, savedCards } = this.state;\n\n    const newCard = { name, description, attr1, attr2, attr3, image, rarity, trunfo };\n\n    if (trunfo) this.setState({ trunfo: false, hasTrunfo: true });\n\n    this.setState((state) => (\n      {\n        savedCards: savedCards.length === 0 ? [newCard] : [...state.savedCards, newCard],\n        name: '',\n        description: '',\n        image: '',\n        attr1: '0',\n        attr2: '0',\n        attr3: '0',\n        rarity: 'normal',\n      }\n    ));\n  }\n\n  handleDeleteButtonClick = ({ target }) => {\n    const { savedCards } = this.state;\n    const cardId = target.parentElement.id;\n    const card = savedCards.find(({ name }) => name === cardId);\n\n    if (card.trunfo) this.setState({ trunfo: false, hasTrunfo: false });\n\n    this.setState((state) => (\n      {\n        /*\n        Consultei o link abaixo para checar como remover um item de um array.\n        link: https://stackoverflow.com/questions/5767325/how-can-i-remove-a-specific-item-from-an-array\n        */\n        savedCards: state.savedCards.filter(({ name }) => name !== cardId),\n      }\n    ));\n  }\n\n  render() {\n    const { state, handleChange, handleSaveButtonClick, handleDeleteButtonClick } = this;\n    return (\n      <div>\n        <header className=\"page-header white-background display-row\">\n          <h1>(＾▽＾) Kawaii Trunfo (＾▽＾)</h1>\n        </header>\n        <section className=\"new-card-section\">\n          <section\n            className=\"pink-background display-column add-card-section vertical-padding-5\"\n          >\n            <h1>Adicionar nova carta</h1>\n            <Form\n              cardName={ state.name }\n              cardDescription={ state.description }\n              cardAttr1={ state.attr1 }\n              cardAttr2={ state.attr2 }\n              cardAttr3={ state.attr3 }\n              cardImage={ state.image }\n              cardRare={ state.rarity }\n              cardTrunfo={ state.trunfo }\n              hasTrunfo={ state.hasTrunfo }\n              isSaveButtonDisabled={ state.isSaveButtonDisabled }\n              onInputChange={ handleChange }\n              onSaveButtonClick={ handleSaveButtonClick }\n            />\n          </section>\n          <section className=\"display-column card-preview-section vertical-padding-5\">\n            <h1>Pré-visualização</h1>\n            <Card\n              cardName={ state.name }\n              cardDescription={ state.description }\n              cardAttr1={ state.attr1 }\n              cardAttr2={ state.attr2 }\n              cardAttr3={ state.attr3 }\n              cardImage={ state.image }\n              cardRare={ state.rarity }\n              cardTrunfo={ state.trunfo }\n            />\n          </section>\n        </section>\n        {state.savedCards.length !== 0 && (\n          <section className=\"saved-cards-section display-column vertical-padding-5\">\n            <h1>Cartas Salvas</h1>\n            <section className=\"saved-cards\">\n              {state.savedCards.map((savedCard) => (\n                <div\n                  key={ savedCard.name }\n                  id={ savedCard.name }\n                  className=\"display-column saved-card\"\n                >\n                  <Card\n                    cardName={ savedCard.name }\n                    cardDescription={ savedCard.description }\n                    cardAttr1={ savedCard.attr1 }\n                    cardAttr2={ savedCard.attr2 }\n                    cardAttr3={ savedCard.attr3 }\n                    cardImage={ savedCard.image }\n                    cardRare={ savedCard.rarity }\n                    cardTrunfo={ savedCard.trunfo }\n                  />\n                  <button\n                    type=\"button\"\n                    data-testid=\"delete-button\"\n                    onClick={ handleDeleteButtonClick }\n                  >\n                    Excluir\n                  </button>\n                </div>\n              ))}\n            </section>\n          </section>)}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}